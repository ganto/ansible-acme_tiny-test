#!/bin/bash

. "${ROLESPEC_LIB}/main"

# Current stable Ansible release
test_ansible_version="stable-2.1"

# Scan common addresses
ssh-keyscan localhost.localdomain >> ~/.ssh/known_hosts

# Install our own SSH key on the account
cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys

# Make sure Ansible can use 'become_user' with an unprivileged account
# See: https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
cat <<EOF >> "${ROLESPEC_ANSIBLE_CONFIG}"
allow_world_readable_tmpfiles = true
EOF

# The Letsencrypt account key has to be provided by the user prior of running
# the role. Let's fake it.
test -d /etc/ssl/acme-tiny || sudo mkdir -p /etc/ssl/acme-tiny
test -f /etc/ssl/acme-tiny/account.key || sudo touch /etc/ssl/acme-tiny/account.key

# Use mock `acme-tiny` script to fake certificate signing process
echo "Adjust path for mock 'acme-tiny' script"
export PATH="$(pwd)/travis/tests/ansible-acme_tiny/mock:$PATH"
which acme-tiny

# Rolespec
install_ansible ${test_ansible_version}
ansible_plugins

assert_playbook_runs

# TODO:
# role is not idempotent yet as every run is triggering a certificate request
#assert_playbook_idempotent

assert_docs

# vim:ft=sh
